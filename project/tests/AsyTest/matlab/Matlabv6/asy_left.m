% Evaluate the asymptotic expansion for the generalised Jacobi polynomial 
% in the left boundary region with a certain method. Derivative is only
% computed when assigned, default is monic normalisation without Q-s or derivatives.
% When using the Q-s, a series of the cosine transform of the asymptotic expansion is 
% also used and theta=arccos(-z).
% Input
%   n,z            - Degree and point at which to evaluate.
%   alpha,beta,h   - Parts of the weight 
%   psi            - Anonymous function for analytic phase function psi(x)
%   nrT            - Number of terms. 1 gives leading order term
%   Dinf           - Limit of the Szego function
%   Uright,Uleft   - Right and left U-matrices
%   [method        - 'm' for monic(default), 'o' for orthonormal, 'mQ' for
%                     monic using the Q-s, 'oQ' for orthonormal with Q-s]
%   [dh,dpsi       - Derivatives of part of weight and phase function]
%   [Qleft         - Left Q-matrices for when regexp(method,'Q') == 1]
%	[theta		   - theta=arccos(-z) when computing with Q-s to save digits]
%   [contpsi	   - Contour integral in psi, needed for series expansions]
% Output
%   bpiL           - Asymptotic expansion of the left boundary polynomial
%   [dbpiL         - Derivative of left boundary polynomial]
% About
%   Author         - Peter Opsomer (Peter.Opsomer@cs.kuleuven.be)
%   History        - Created October 2013, last edit February 2015
function [bpiL, dbpiL] = asy_left(n,z,alpha,beta,h,psi,nrT,Dinf,Uright,Uleft,method,dh,dpsi,Qleft,theta,contpsi)
if ~exist('method','var') method = 'm'; end

if regexp(method,'o')
	if (nrT == 1) || (numel(Uright) == 0),		nmz = 1;	else
		nmz = sqrt(real(1+2*1i*Dinf^2*sum(reshape(Uright(2,1,1:(nrT-1),1) + ...
			Uleft(2,1,1:(nrT-1),1), [(nrT-1) 1])./(n+1).^(1:(nrT-1) )' ) ) );
	end
end

if regexp(method,'Q')
	if (abs(z+1) >1e-2) || (abs(theta) > 1e-2)
		warning('Theta is not small so using Q-s will probably give an inaccurate result')
	end
	mo = size(Qleft,4)-1;
	sbes = 0;	sden = 0;	sthosth = 0;	ssinpl = 0;	ssinmi = 0;	sdbes = 0;
	for nn = 0:mo
		sbes = sbes + (-1)^nn*(n/2)^(beta+2*nn)*theta^(2*nn)/gamma(1+nn+beta)/factorial(nn);
		sden = sden + (-1)^nn*theta^(2*nn)/gamma(3+2*nn);
		sthosth = sthosth + (-1)^nn*theta^(2*nn)/factorial(1+2*nn);
				
		ssinpl = ssinpl + (-1)^(nn+1)*(psi(z) -beta*pi/2 -theta/2).^(2*nn)/factorial(1+2*nn);
		ssinmi = ssinmi + (-1)^nn*(psi(z) -beta*pi/2 +theta/2).^(2*nn)/factorial(1+2*nn);
		sdbes = sdbes + (-1)^nn/factorial(nn)*(n/2)^(2*nn+beta+1)*(4/n^2*theta^(2*nn)/gamma(nn+beta)...
			-theta^(2*nn+2)/gamma(2+nn+beta))/2;
	end
	plcoef = (-alpha-beta-1)/2 +sthosth/(4i*pi)*contpsi(z,1);
	micoef = (-alpha-beta+1)/2 +sthosth/(4i*pi)*contpsi(z,1);
	sbesowei = sbes*(sden)^(-beta/2);
	splsindbes = plcoef*ssinpl*sdbes*sden^(-beta/2);
	smisindbes = micoef*ssinmi*sdbes*sden^(-beta/2);
	RL = zeros(2);
	for k = (nrT-1):-1:1 % Counting down to avoid roundoff error
		tmp = zeros(2);
		for i = 1:size(Qleft,4)
			tmp = tmp + Qleft(:,:,k,i)*(-theta^2*sden)^(i-1);		
		end
		RL = (RL + tmp)/n;
	end
	RL = RL + eye(2);
else
	w = @(x) (1-x).^alpha.*(1+x).^beta.*h(x);
	if abs(z+1) < eps^(1/3)
		warning('z is close to -1 so use Q-s and series expansions in "method"')
	end
	brac = @(k) (k == 0) + (k~= 0)*prod(4*beta^2 -(2*(1:k)-1).^2)/(2^(2*k)*factorial(k) ); % = (beta,k)
	
	DeltaL = @(k,x) brac(k-1) ...
		/2^k./(log(-x -sqrt(x-1).*sqrt(x+1)).^k)./(2*sqrt(x+1)*sqrt(x-1))*[Dinf 0; 0 Dinf^(-1)]*...
		[sqrt(x + sqrt(x-1).*sqrt(x+1) ), 1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ); ...
		-1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ), sqrt(x + sqrt(x-1).*sqrt(x+1) ) ]*...
		[exp( 1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2) ) 0; 0 exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2))]*...
		[ ((-1)^k)/k*(beta^2+k/2-1/4),1i*(k-1/2) ; (-1)^(k+1)*1i*(k-1/2), (beta^2+k/2-1/4)/k]*...
		[exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2)) 0; 0 exp(1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2) )]*...
		[sqrt(x + sqrt(x-1).*sqrt(x+1) ), -1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ); ...
		1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ), sqrt(x + sqrt(x-1).*sqrt(x+1) ) ]*[Dinf^(-1) 0; 0 Dinf];
	
	s = zeros(2,2,nrT-1);	R = zeros(2,2,nrT-1);
	RL = eye(2);
	for k = 1:nrT-1
		s(:,:,k) = DeltaL(k,z);
		for m = 1:round(k/2)
			R(:,:,k) = R(:,:,k) + Uright(:,:,k,m)./(z-1).^m + Uleft(:,:,k,m)./(z+1).^m;
		end
		if mod(k,2)==0 % k is even: add extra matrix
			s(:,:,k) = s(:,:,k) -brac(k-1)*(4*beta^2+2*k-1)/2^(k+1)/k...
				/(log(-z-sqrt(z-1).*sqrt(z+1) ) )^k*eye(2);
		end
		RL = RL + (R(:,:,k)-s(:,:,k) )/n^k;
		for j = 1:(k-1)
			RL = RL - R(:,:,k-j)*s(:,:,j)/n^k;
		end
	end
	b1 = sin(psi(z) -beta*pi/2 + acos(z)/2)*besselj(beta,n*acos(-z) ) + cos(psi(z) -beta*pi/2 + acos(z)/2)*...
		(besselj(beta-1,n*acos(-z) ) - besselj(beta+1,n*acos(-z) ) )/2;
	b2 = sin(psi(z) -beta*pi/2 -acos(z)/2)*besselj(beta,n*acos(-z) ) + cos(psi(z) -beta*pi/2 -acos(z)/2)*...
        (besselj(beta-1,n*acos(-z) ) - besselj(beta+1,n*acos(-z) ) )/2;
end

if strcmp(method,'m')
    bpiL = [sqrt(pi*n*acos(-z))./((-2)^n.*sqrt(w(z)).*(1+z).^(1/4).*(1-z).^(1/4) ),...
        0]*RL*[Dinf*b1; -1i/Dinf*b2];%*(-1)^(abs(angle(z  +1))>pi/2);
elseif strcmp(method,'o')
    bpiL = [sqrt(n*acos(-z))./((-1)^n.*sqrt(w(z)).*(1+z).^(1/4).*(1-z).^(1/4) ),...
        0]*RL*[b1; -1i/Dinf^2*b2]*nmz;%*(-1)^(abs(angle(z  +1))>pi/2);
elseif strcmp(method,'mQ')
	bpiL = [sqrt(pi*n/sthosth)./((-2).^n*sqrt((1-z).^alpha.*h(z) ) ),...
		0]*RL*[Dinf*(sin(psi(z) -beta*pi/2 + (pi-theta)/2)*sbesowei +splsindbes); ...
		-1i/Dinf*(sin(psi(z) -beta*pi/2 -(pi-theta)/2)*sbesowei + smisindbes)]...
		;%(-1)^(abs(angle(z  +1))>pi/2);
elseif strcmp(method,'oQ')
	bpiL = [sqrt(n/sthosth)./((-1)^n.*sqrt((1-z).^alpha.*h(z) ) ),...
		0]*RL*[(sin(psi(z) -beta*pi/2 + (pi-theta)/2)*sbesowei +splsindbes); ...
		-1i/Dinf^2*(sin(psi(z) -beta*pi/2 -(pi-theta)/2)*sbesowei + smisindbes)]*nmz...
		;%*(-1)^(abs(angle(z  +1))>pi/2);
else
    error('Wrong method')
end

if nargout == 1 return; end

dRL = zeros(2);
if regexp(method,'Q')
	dsbes = 0;	dsden = 0;	dsthosth = 0;	dssinpl = 0;	dssinmi = 0;
	dsdbes = (n/2)^(beta+1)*(-2)/gamma(2+beta)/2;
	for nn = 1:mo
		dsbes = dsbes + (-1)^nn*(n/2)^(beta+2*nn)*theta^(2*nn-2)*2*nn/gamma(1+nn+beta)/factorial(nn);
		dsden = dsden + (-1)^nn*theta^(2*nn-2)*2*nn/gamma(3+2*nn);
		dsthosth = dsthosth + (-1)^nn*theta^(2*nn-2)*2*nn/factorial(1+2*nn);	
		dssinpl = dssinpl + (-1)^(nn+1)*(psi(z)-beta*pi/2 -theta/2).^(2*nn-2)*...
			2*nn/factorial(1+2*nn)*plcoef^2;
		dssinmi = dssinmi + (-1)^nn*(psi(z)-beta*pi/2 +theta/2).^(2*nn-2)*...
			2*nn/factorial(1+2*nn)*micoef^2;
		dsdbes = dsdbes + (-1)^nn/factorial(nn)*(n/2)^(2*nn+beta+1)*...
			(4/n^2*theta^(2*nn-2)*2*nn/gamma(nn+beta)-theta^(2*nn)*(2*nn+2)/gamma(2+nn+beta))/2;
	end
	dsbesowei = dsbes*(sden)^(-beta/2) -beta/2*sbes*sden^(-beta/2-1)*dsden;
	dscosbesoweipl = sin(psi(z) -beta*pi/2 +(pi-theta)/2)*dsbesowei + sbesowei*ssinpl*plcoef^2;
	dscosbesoweimi = sin(psi(z) -beta*pi/2 -(pi-theta)/2)*dsbesowei + sbesowei*ssinmi*micoef^2;
	
	common1 = -beta/2*sdbes*(sden)^(-beta/2-1)*dsden + (sden)^(-beta/2)*dsdbes;
	common2 = (dsthosth*contpsi(z,1)+sthosth^2*contpsi(z,2) )/(4i*pi)*sdbes*(sden)^(-beta/2);
	
	dssindbesoweipl = plcoef*(common1*ssinpl + sdbes*(sden)^(-beta/2)*dssinpl) + common2*ssinpl;
	dssindbesoweimi = micoef*(common1*ssinmi + sdbes*(sden)^(-beta/2)*dssinmi) + common2*ssinmi;	
	
	for k = (nrT-1):-1:1
		tmp = zeros(2);
		for i = 2:size(Qleft,4) %Start from i=2 to avoid constant term
			tmp = tmp + Qleft(:,:,k,i)*(theta^2*sden)^(i-2)*(i-1)*sthosth;
		end
		dRL = (dRL + tmp)/n;
	end
else
	dw = @(x) -alpha*(1-x).^(alpha-1).*(1+x).^beta.*h(x)  +(1-x).^alpha.*beta*(1+x).^(beta-1).*h(x)...
		+(1-x).^alpha.*(1+x).^beta.*dh(x);
	dSqrtPhi = @(x) 1/2./sqrt(x + sqrt(x-1).*sqrt(x+1) ).*(1+x./sqrt(x-1)./sqrt(x+1) );
	
	dDeltaL = @(k,x) DeltaL(k,x).*(log(-x -sqrt(x-1).*sqrt(x+1)).^k).*2*sqrt(x+1)*sqrt(x-1)...
		.*(  (-k)*log(-x -sqrt(x-1).*sqrt(x+1)).^(-k-1)./(-x -sqrt(x-1).*sqrt(x+1))...
		.*(-1 -x./sqrt(x-1)./sqrt(x+1) )./(2*sqrt(x+1)*sqrt(x-1))...
		+1./(log(-x -sqrt(x-1).*sqrt(x+1)).^k).*(-x/2).*(x+1)^(-3/2).*(x-1)^(-3/2) ) ...
		+... % End of derivative of term in front
		brac(k-1)/2^k./(log(-x -sqrt(x-1).*sqrt(x+1)).^k)./(2*sqrt(x+1)*sqrt(x-1))*[Dinf 0; 0 Dinf^(-1)]*...
		( [dSqrtPhi(x),-1i*dSqrtPhi(x)./(x + sqrt(x-1).*sqrt(x+1) ); ...
		1i*dSqrtPhi(x)./(x + sqrt(x-1).*sqrt(x+1) ),dSqrtPhi(x)]*...
		[exp( 1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2) ) 0; 0 exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2))]...
		+[sqrt(x + sqrt(x-1).*sqrt(x+1) ), 1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ); ...
		-1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ), sqrt(x + sqrt(x-1).*sqrt(x+1) ) ]*...
		[exp( 1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2) )*1i*(-1)^(angle(x-1) <= 0)*dpsi(x) 0; ...
		0 exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2))*(-1i)*(-1)^(angle(x-1) <= 0)*dpsi(x)]...
		)*...
		[ ((-1)^k)/k*(beta^2+k/2-1/4),1i*(k-1/2) ; (-1)^(k+1)*1i*(k-1/2), (beta^2+k/2-1/4)/k]*...
		[exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2)) 0; 0 exp(1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2) )]*...
		[sqrt(x + sqrt(x-1).*sqrt(x+1) ), -1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ); ...
		1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ), sqrt(x + sqrt(x-1).*sqrt(x+1) ) ]*[Dinf^(-1) 0; 0 Dinf]...
		+...% End of derivative of Lambda, now derivative of Lambda^(-1)
		brac(k-1)/2^k./(log(-x -sqrt(x-1).*sqrt(x+1)).^k)./(2*sqrt(x+1)*sqrt(x-1))*[Dinf 0; 0 Dinf^(-1)]*...
		[sqrt(x + sqrt(x-1).*sqrt(x+1) ), 1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ); ...
		-1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ), sqrt(x + sqrt(x-1).*sqrt(x+1) ) ]*...
		[exp( 1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2) ) 0; 0 exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2))]*...
		[ ((-1)^k)/k*(beta^2+k/2-1/4),1i*(k-1/2) ; (-1)^(k+1)*1i*(k-1/2), (beta^2+k/2-1/4)/k]*...
		(...
		[-1i*(-1)^(angle(x-1) <= 0)*dpsi(x)*exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2)) 0; ...
		0 1i*(-1)^(angle(x-1) <= 0)*dpsi(x)*exp(1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2) )]*...
		[sqrt(x + sqrt(x-1).*sqrt(x+1) ), -1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ); ...
		1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ), sqrt(x + sqrt(x-1).*sqrt(x+1) ) ] + ...
		[exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2)) 0; 0 exp(1i*(-1)^(angle(x-1) <= 0)*(psi(x) -beta*pi/2) )]*...
		[dSqrtPhi(x),1i*dSqrtPhi(x)./(x + sqrt(x-1).*sqrt(x+1) ); ...
		-1i*dSqrtPhi(x)./(x + sqrt(x-1).*sqrt(x+1) ),dSqrtPhi(x)])*[Dinf^(-1) 0; 0 Dinf];
	
	ds = zeros(2,2,nrT-1);	dR = zeros(2,2,nrT-1);
	
	for k = 1:nrT-1
		for m = 1:round(k/2)
			dR(:,:,k) = dR(:,:,k) + Uright(:,:,k,m)./(z-1).^(m+1)*(-m) + ...
				Uleft(:,:,k,m)./(z+1).^(m+1)*(-m);
		end
		
		ds(:,:,k) = dDeltaL(k,z);
		if mod(k,2)==0 % k is even: add extra matrix
			ds(:,:,k) = ds(:,:,k) -brac(k-1)*(4*beta^2+2*k-1)/2^(k+1)/k...
				*(-k)*log(-z -sqrt(z-1).*sqrt(z+1)).^(-k-1)./(-z -sqrt(z-1).*sqrt(z+1))...
				.*(-1 -z./sqrt(z-1)./sqrt(z+1) )*eye(2);
		end
		dRL = dRL + (dR(:,:,k)-ds(:,:,k) )/n^k; % Avoids defining R_0^{right} = I
		for j = 1:(k-1)
			dRL = dRL - (dR(:,:,k-j)*s(:,:,j)+R(:,:,k-j)*ds(:,:,j))/n^k;
		end
	end
	db1 = cos(psi(z) -beta*pi/2 + acos(z)/2)*(dpsi(z)-1/2/sqrt(1-z)/sqrt(1+z))*...
        besselj(beta,n*acos(-z) ) +...
        sin(psi(z) -beta*pi/2 + acos(z)/2)*(besselj(beta-1,n*acos(-z) )...
        -besselj(beta+1,n*acos(-z) ))/2*n*(+1)/sqrt(1-z)/sqrt(1+z) +...
        ...% Above derivative of sine-term, below cos term
        -sin(psi(z) -beta*pi/2 + acos(z)/2)*(dpsi(z)-1/2/sqrt(1-z)/sqrt(1+z) )*...
        (besselj(beta-1,n*acos(-z) ) - besselj(beta+1,n*acos(-z) ) )/2 ...
        +cos(psi(z) -beta*pi/2 + acos(z)/2)*(besselj(beta-2,n*acos(-z) ) ...
        -2*besselj(beta,n*acos(-z) ) +besselj(beta+2,n*acos(-z) ) )/4*...
        n*(+1)/sqrt(1-z)/sqrt(1+z);
	db2 = cos(psi(z) -beta*pi/2 -acos(z)/2)*(dpsi(z)-1/2*(-1)/sqrt(1-z)/sqrt(1+z) )*...
        besselj(beta,n*acos(-z) )...
        + sin(psi(z) -beta*pi/2 -acos(z)/2)*(besselj(beta-1,n*acos(-z) ) ...
        -besselj(beta+1,n*acos(-z) ) )/2*n*(+1)/sqrt(1-z)/sqrt(1+z)...
        -sin(psi(z) -beta*pi/2 -acos(z)/2)*(dpsi(z)+1/2/sqrt(1-z)/sqrt(1+z))*...
        (besselj(beta-1,n*acos(-z) ) - besselj(beta+1,n*acos(-z) ) )/2 ...
        + cos(psi(z) -beta*pi/2 -acos(z)/2)*...
        (besselj(beta-2,n*acos(-z) ) -2*besselj(beta,n*acos(-z) )...
        +besselj(beta+2,n*acos(-z) ) )/4*n/sqrt(1-z)/sqrt(1+z);
end

if strcmp(method,'m')
	dbpiL = ([sqrt(pi*n)*(1/2./sqrt(acos(-z) )./(sqrt(1-z).*sqrt(1+z).*(-2)^n.*sqrt(w(z)).*...
		(1+z).^(1/4).*(1-z).^(1/4) ) ...
		+sqrt(acos(-z))./(-2)^n*(dw(z)*(-1/2)./(sqrt(w(z) ).^3.*(1+z).^(1/4).*(1-z).^(1/4) ) ...
		-1/4*(-2*z)./(sqrt(w(z) ).*(1+z).^(5/4).*(1-z).^(5/4) ) ) ),...
        0]*RL + ...
        [sqrt(pi*n*acos(-z))./((-2)^n.*sqrt(w(z)).*(1+z).^(1/4).*(1-z).^(1/4) ),...
        0]*dRL)*[Dinf*b1; -1i/Dinf*b2] +...
        [sqrt(pi*n*acos(-z))./((-2)^n.*sqrt(w(z)).*(1+z).^(1/4).*(1-z).^(1/4) ),...
        0]*RL*[Dinf*db1;-1i/Dinf*db2];%*(-1)^(abs(angle(z  +1))>pi/2);
elseif strcmp(method,'o')
dbpiL = (([sqrt(n)*(1/2./sqrt(acos(-z) )./(sqrt(1-z).*sqrt(1+z).*(-1)^n.*sqrt(w(z)).*...
		(1+z).^(1/4).*(1-z).^(1/4) ) ...
		+sqrt(acos(-z))./(-1)^n*(dw(z)*(-1/2)./(sqrt(w(z) ).^3.*(1+z).^(1/4).*(1-z).^(1/4) ) ...
		-1/4*(-2*z)./(sqrt(w(z) ).*(1+z).^(5/4).*(1-z).^(5/4) ) ) ),...
        0]*RL + ...
        [sqrt(n*acos(-z))./((-1)^n.*sqrt(w(z)).*(1+z).^(1/4).*(1-z).^(1/4) ),...
        0]*dRL)*[b1; -1i/Dinf^2*b2] +...
        [sqrt(n*acos(-z))./((-1)^n.*sqrt(w(z)).*(1+z).^(1/4).*(1-z).^(1/4) ),...
        0]*RL*[db1;-1i/Dinf^2*db2])*nmz;%*(-1)^(abs(angle(z  +1))>pi/2);
elseif strcmp(method,'mQ')
	dbpiL = ([sqrt(pi*n).*(-2)^(-n)*...
        (-1/2*sthosth^(-3/2)*dsthosth./(sqrt((1-z).^alpha.*h(z) ) ) + ...
		(dh(z)*(-1/2)./(sqrt(h(z).^3.*(1-z).^alpha) ) ...
		-alpha/2./(sqrt(h(z).*(1-z).^alpha).*(1-z).*(-1) ) ) ),...
		0]*RL + [sqrt(n*pi/sthosth).*(-2)^(-n)./(sqrt(h(z) .*(1-z).^alpha ) ),...
		0]*dRL )*[Dinf*(sin(psi(z) -beta*pi/2 + (pi-theta)/2)*sbesowei +...
		splsindbes ); -1i/Dinf*(sin(psi(z) -beta*pi/2 -(pi-theta)/2)*...
		sbesowei + smisindbes)] + [sqrt(n*pi/sthosth).*(-2)^(-n)./(sqrt(h(z).*(1-z).^alpha) ),...
		0]*RL*[Dinf*(dscosbesoweipl +dssindbesoweipl);-1i/Dinf*(dscosbesoweimi+dssindbesoweimi)];
	dbpiL = +dbpiL/sthosth;%*(-1)^(abs(angle(z  +1))>pi/2);
elseif strcmp(method,'oQ')
	dbpiL = ([sqrt(n).*(-1)^(-n)*...
        (-1/2*sthosth^(-3/2)*dsthosth./(sqrt((1-z).^alpha.*h(z) ) ) + ...
		(dh(z)*(-1/2)./(sqrt(h(z).^3.*(1-z).^alpha) ) ...
		-alpha/2./(sqrt(h(z).*(1-z).^alpha).*(1-z).*(-1) ) ) ),...
		0]*RL + [sqrt(n/sthosth)./(sqrt(h(z) .*(1-z).^alpha ).*(-1)^n ),...
		0]*dRL )*[(sin(psi(z) -beta*pi/2 + (pi-theta)/2)*sbesowei +...
		splsindbes ); -1i/Dinf^2*(sin(psi(z) -beta*pi/2 -(pi-theta)/2)*...
		sbesowei + smisindbes)] + [sqrt(n/sthosth)./(sqrt(h(z).*(1-z).^alpha).*(-1)^n ),...
		0]*RL*[(dscosbesoweipl +dssindbesoweipl);-1i/Dinf^2*(dscosbesoweimi+dssindbesoweimi)];
	dbpiL = +dbpiL/sthosth*nmz;%*(-1)^(abs(angle(z  +1))>pi/2);
end
