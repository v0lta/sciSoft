% Evaluate the asymptotic expansion for the generalised Jacobi polynomial 
% in the right boundary region with a certain method. Derivative is only
% computed when assigned, default is monic normalisation without derivatives or Q-s. 
% When using the Q-s, a series of the cosine transform of the asymptotic expansion is 
% also used and theta=arccos(z).
% Input
%   n,z          - Degree and point at which to evaluate.
%   alpha,beta,h - Parts of the weight 
%   psi          - Anonymous function for analytic phase function psi(x)
%   nrT          - Number of terms. 1 gives leading order term
%   Dinf         - Limit of the Szego function
%   Uright,Uleft - Right and left U-matrices
%   [method      - 'm' for monic(default), 'o' for orthonormal, 'mQ' for
%                   monic using the Q-s, 'oQ' for orthonormal with Q-s]
%   [dh,dpsi     - Derivatives of part of weight and phase function]
%   [Qright      - Right Q-matrices for when regexp(method,'Q') == 1]
%	[theta	     - theta=arccos(z) when computing with Q-s to save digits]
%   [contpsi	 - Contour integral in psi, needed for series expansions]
% Output
%   bpiR         - Asymptotic expansion of the right boundary polynomial
%   [dbpiR       - Derivative of right boundary polynomial, also when using Q-s]
% About
%   Author       - Peter Opsomer (Peter.Opsomer@cs.kuleuven.be)
%   History      - Created October 2013, last edit February 2015
function [bpiR, dbpiR] = asy_right(n,z,alpha,beta,h,psi,nrT,Dinf,Uright,Uleft,method,dh,dpsi,Qright,theta,contpsi)

if ~exist('method','var') method = 'm'; end

if regexp(method,'o')
	if (nrT == 1) || (numel(Uright) == 0),		nmz = 1;	else
		nmz = sqrt(real(1+2*1i*Dinf^2*sum(reshape(Uright(2,1,1:(nrT-1),1) + ...
			Uleft(2,1,1:(nrT-1),1), [(nrT-1) 1])./(n+1).^(1:(nrT-1) )' ) ) );
	end
end

if regexp(method,'Q')
	if (abs(z-1) >1e-2) || (abs(theta) > 1e-2)
		warning('Theta is not small so using Q-s will probably give an inaccurate result')
	end
	mo = size(Qright,4)-1;
	sbes = 0;	sden = 0;	sthosth = 0;	ssinpl = 0;	ssinmi = 0;	sdbes = 0;
	for nn = 0:mo
		sbes = sbes + (-1)^nn*(n/2)^(alpha+2*nn)*theta^(2*nn)/gamma(1+nn+alpha)/factorial(nn);
		sden = sden + (-1)^nn*theta^(2*nn)/gamma(3+2*nn);
		sthosth = sthosth + (-1)^nn*theta^(2*nn)/factorial(1+2*nn);
		ssinpl = ssinpl + (-1)^nn*(psi(z)+alpha*pi/2+theta/2).^(2*nn)/factorial(1+2*nn);
		ssinmi = ssinmi + (-1)^nn*(psi(z)+alpha*pi/2-theta/2).^(2*nn)/factorial(1+2*nn);
		sdbes = sdbes + (-1)^nn/factorial(nn)*(n/2)^(2*nn+alpha+1)*(4/n^2*theta^(2*nn)/gamma(nn+alpha)...
			-theta^(2*nn+2)/gamma(2+nn+alpha))/2;
	end
	plcoef = (alpha+beta+1)/2 +sthosth/(4i*pi)*contpsi(z,1);
	micoef = (alpha+beta-1)/2 +sthosth/(4i*pi)*contpsi(z,1);
	sbesowei = sbes*(sden)^(-alpha/2);
	splsindbes = plcoef*ssinpl*sdbes*sden^(-alpha/2);
	smisindbes = micoef*ssinmi*sdbes*sden^(-alpha/2);
	RR = zeros(2);
	for k = (nrT-1):-1:1 % Counting down to avoid roundoff error
		tmp = zeros(2);
		for i = 1:size(Qright,4)
			tmp = tmp + Qright(:,:,k,i)*(-theta^2*sden)^(i-1);
		end
		RR = (RR + tmp)/n;
	end
	RR = RR + eye(2);
else
	w = @(x) (1-x).^alpha.*(1+x).^beta.*h(x);
	if abs(z-1) < eps^(1/3)
		warning('z is close to 1 so use Q-s and series expansions in "method"')
	end
	brac = @(k) (k == 0) + (k~= 0)*prod(4*alpha^2 -(2*(1:k)-1).^2)/(2^(2*k)*factorial(k) ); % = (alpha,k)
	
	DeltaR = @(k,x) brac(k-1) ...
		/2^k./(log(x + sqrt(x-1).*sqrt(x+1)).^k)./(2*sqrt(x+1)*sqrt(x-1))*[Dinf 0; 0 Dinf^(-1)]*...
		[sqrt(x + sqrt(x-1).*sqrt(x+1) ), 1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ); ...
		-1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ), sqrt(x + sqrt(x-1).*sqrt(x+1) ) ]*...
[exp( 1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2) ) 0; 0 exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2))]*...
		[ ((-1)^k)/k*(alpha^2+k/2-1/4),-1i*(k-1/2) ; (-1)^k*1i*(k-1/2), (alpha^2+k/2-1/4)/k]*...
[exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2)) 0; 0 exp(1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2) )]*...
		[sqrt(x + sqrt(x-1).*sqrt(x+1) ), -1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ); ...
		1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ), sqrt(x + sqrt(x-1).*sqrt(x+1) ) ]*[Dinf^(-1) 0; 0 Dinf];
	
	s = zeros(2,2,nrT-1);	R = zeros(2,2,nrT-1);
	RR = eye(2);
	for k = 1:nrT-1
		for m = 1:round(k/2)
			R(:,:,k) = R(:,:,k) + Uright(:,:,k,m)./(z-1).^m + Uleft(:,:,k,m)./(z+1).^m;
		end
		s(:,:,k) = DeltaR(k,z);
		if mod(k,2)==0 % k is even: add extra matrix
			s(:,:,k) = s(:,:,k) -brac(k-1)*(4*alpha^2+2*k-1)/2^(k+1)/k...
				/(log(z+sqrt(z-1).*sqrt(z+1) ) )^k*eye(2);
		end
		RR = RR + (R(:,:,k)-s(:,:,k) )/n^k; % Avoids defining R_0^{right} = I
		for j = 1:(k-1)
			RR = RR - R(:,:,k-j)*s(:,:,j)/n^k;
		end
	end
	b1 = cos(psi(z) +alpha*pi/2 + acos(z)/2)*besselj(alpha,n*acos(z) ) + sin(psi(z) +alpha*pi/2 + acos(z)/2)*...
		(besselj(alpha-1,n*acos(z) ) - besselj(alpha+1,n*acos(z) ) )/2;
	b2 = cos(psi(z) +alpha*pi/2 -acos(z)/2)*besselj(alpha,n*acos(z) ) + sin(psi(z) +alpha*pi/2 -acos(z)/2)*...
        (besselj(alpha-1,n*acos(z) ) - besselj(alpha+1,n*acos(z) ) )/2;
end

if strcmp(method,'m')
    bpiR = [sqrt(pi*n*acos(z))./(2^n.*sqrt(w(z) ).*(1+z).^(1/4).*(1-z).^(1/4) ),...
        0]*RR*[Dinf*b1; -1i/Dinf*b2];
elseif strcmp(method,'o')
    bpiR = [sqrt(n*acos(z))./(sqrt(w(z) ).*(1+z).^(1/4).*(1-z).^(1/4) ),...
		0]*RR*[b1;(-1i/Dinf^2*b2)]*nmz;
elseif strcmp(method,'mQ')
	bpiR = [sqrt(pi*n/sthosth)./(2^n.*sqrt((1+z).^beta.*h(z) ) ),...
		0]*RR*[Dinf*(cos(psi(z) +alpha*pi/2 + theta/2)*sbesowei +...
		splsindbes); -1i/Dinf*(cos(psi(z) +alpha*pi/2 -theta/2)*sbesowei + smisindbes)];
elseif strcmp(method,'oQ')
	bpiR = [sqrt(n/sthosth)./(sqrt((1+z).^beta.*h(z) ) ),...
		0]*RR*[(cos(psi(z) +alpha*pi/2 + theta/2)*sbesowei +splsindbes); ...
		-1i/Dinf^2*(cos(psi(z) +alpha*pi/2 -theta/2)*sbesowei + smisindbes)]*nmz;
else
	error('Wrong method')
end

if nargout == 1 return; end

dRR = zeros(2);
if regexp(method,'Q')
	dsbes = 0;	dsden = 0;	dsthosth = 0;	dssinpl = 0;	dssinmi = 0;
	dsdbes = (n/2)^(alpha+1)*(-2)/gamma(2+alpha)/2;
	for nn = 1:mo
		dsbes = dsbes + (-1)^nn*(n/2)^(alpha+2*nn)*theta^(2*nn-2)*2*nn/gamma(1+nn+alpha)/factorial(nn);
		dsden = dsden + (-1)^nn*theta^(2*nn-2)*2*nn/gamma(3+2*nn);
		dsthosth = dsthosth + (-1)^nn*theta^(2*nn-2)*2*nn/factorial(1+2*nn);
		dssinpl = dssinpl + (-1)^nn*(psi(z)+alpha*pi/2+theta/2).^(2*nn-2)*2*nn/factorial(1+2*nn)*plcoef^2;
		dssinmi = dssinmi + (-1)^nn*(psi(z)+alpha*pi/2-theta/2).^(2*nn-2)*2*nn/factorial(1+2*nn)*micoef^2;
		dsdbes = dsdbes + (-1)^nn/factorial(nn)*(n/2)^(2*nn+alpha+1)*(4/n^2*theta^(2*nn-2)*2*nn/gamma(nn+alpha)...
			-theta^(2*nn)*(2*nn+2)/gamma(2+nn+alpha))/2;
	end
	dsbesowei = dsbes*(sden)^(-alpha/2) -alpha/2*sbes*sden^(-alpha/2-1)*dsden;
	dscosbesoweipl = cos(psi(z) +alpha*pi/2 +theta/2)*dsbesowei - sbesowei*ssinpl*plcoef^2;
	dscosbesoweimi = cos(psi(z) +alpha*pi/2 -theta/2)*dsbesowei - sbesowei*ssinmi*micoef^2;
	
	common1 = -alpha/2*sdbes*(sden)^(-alpha/2-1)*dsden + (sden)^(-alpha/2)*dsdbes;
	common2 = (dsthosth*contpsi(z,1)+sthosth^2*contpsi(z,2) )/(4i*pi)*sdbes*(sden)^(-alpha/2);
	
	dssindbesoweipl = plcoef*(common1*ssinpl + sdbes*(sden)^(-alpha/2)*dssinpl) + common2*ssinpl;
	dssindbesoweimi = micoef*(common1*ssinmi + sdbes*(sden)^(-alpha/2)*dssinmi) + common2*ssinmi;
	
	for k = (nrT-1):-1:1
		tmp = zeros(2);
		for i = 2:size(Qright,4) %Start from i=2 to avoid constant term
			tmp = tmp + Qright(:,:,k,i)*(-theta^2*sden)^(i-2)*(i-1)*(-sthosth);
		end
		dRR = (dRR + tmp)/n;
	end
else
	dw = @(x) -alpha*(1-x).^(alpha-1).*(1+x).^beta.*h(x)  +(1-x).^alpha.*beta*(1+x).^(beta-1).*h(x)...
		+(1-x).^alpha.*(1+x).^beta.*dh(x);
	dSqrtPhi = @(x) 1/2./sqrt(x + sqrt(x-1).*sqrt(x+1) ).*(1+x./sqrt(x-1)./sqrt(x+1) );
	
	dDeltaR = @(k,x) DeltaR(k,x).*(log(x + sqrt(x-1).*sqrt(x+1)).^k).*2*sqrt(x+1)*sqrt(x-1)...
		.*( (-k)*log(x + sqrt(x-1).*sqrt(x+1)).^(-k-1)./(x + sqrt(x-1).*sqrt(x+1))...
		.*(1 +x./sqrt(x-1)./sqrt(x+1) )./(2*sqrt(x+1)*sqrt(x-1))...
		+1./(log(x + sqrt(x-1).*sqrt(x+1)).^k).*(-x/2).*(x+1)^(-3/2).*(x-1)^(-3/2) ) ...
		+... % End of derivative of term in front
		brac(k-1)/2^k./(log(x + sqrt(x-1).*sqrt(x+1)).^k)./(2*sqrt(x+1)*sqrt(x-1))*[Dinf 0; 0 Dinf^(-1)]*...
		( [dSqrtPhi(x),-1i*dSqrtPhi(x)./(x + sqrt(x-1).*sqrt(x+1) ); ...
		1i*dSqrtPhi(x)./(x + sqrt(x-1).*sqrt(x+1) ),dSqrtPhi(x)]*...
		[exp( 1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2) ) 0; 0 exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2))]...
		+[sqrt(x + sqrt(x-1).*sqrt(x+1) ), 1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ); ...
		-1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ), sqrt(x + sqrt(x-1).*sqrt(x+1) ) ]*...
		[exp( 1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2) )*1i*(-1)^(angle(x-1) <= 0)*dpsi(x) 0; ...
		0 exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2))*(-1i)*(-1)^(angle(x-1) <= 0)*dpsi(x)]...
		)*...
		[ ((-1)^k)/k*(alpha^2+k/2-1/4),-1i*(k-1/2) ; (-1)^k*1i*(k-1/2), (alpha^2+k/2-1/4)/k]*...
		[exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2)) 0; 0 exp(1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2) )]*...
		[sqrt(x + sqrt(x-1).*sqrt(x+1) ), -1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ); ...
		1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ), sqrt(x + sqrt(x-1).*sqrt(x+1) ) ]*[Dinf^(-1) 0; 0 Dinf]...
		+...% End of derivative of Lambda, now derivative of Lambda^(-1)
		brac(k-1)/2^k./(log(x + sqrt(x-1).*sqrt(x+1)).^k)./(2*sqrt(x+1)*sqrt(x-1))*[Dinf 0; 0 Dinf^(-1)]*...
		[sqrt(x + sqrt(x-1).*sqrt(x+1) ), 1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ); ...
		-1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ), sqrt(x + sqrt(x-1).*sqrt(x+1) ) ]*...
		[exp( 1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2) ) 0; 0 exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2))]*...
		[ ((-1)^k)/k*(alpha^2+k/2-1/4),-1i*(k-1/2) ; (-1)^k*1i*(k-1/2), (alpha^2+k/2-1/4)/k]*...
		(...
		[-1i*(-1)^(angle(x-1) <= 0)*dpsi(x)*exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2)) 0; ...
		0 1i*(-1)^(angle(x-1) <= 0)*dpsi(x)*exp(1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2) )]*...
		[sqrt(x + sqrt(x-1).*sqrt(x+1) ), -1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ); ...
		1i/sqrt(x + sqrt(x-1).*sqrt(x+1) ), sqrt(x + sqrt(x-1).*sqrt(x+1) ) ] + ...
		[exp(-1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2)) 0; 0 exp(1i*(-1)^(angle(x-1) <= 0)*(psi(x) +alpha*pi/2) )]*...
		[dSqrtPhi(x),1i*dSqrtPhi(x)./(x + sqrt(x-1).*sqrt(x+1) ); ...
		-1i*dSqrtPhi(x)./(x + sqrt(x-1).*sqrt(x+1) ),dSqrtPhi(x)])*[Dinf^(-1) 0; 0 Dinf];
	
	ds = zeros(2,2,nrT-1);	dR = zeros(2,2,nrT-1);
	for k = 1:nrT-1
		for m = 1:round(k/2)
			dR(:,:,k) = dR(:,:,k) + Uright(:,:,k,m)./(z-1).^(m+1)*(-m) + ...
				Uleft(:,:,k,m)./(z+1).^(m+1)*(-m);
		end
		ds(:,:,k) = dDeltaR(k,z);
		if mod(k,2)==0 % k is even: add extra matrix
			ds(:,:,k) = ds(:,:,k) -brac(k-1)*(4*alpha^2+2*k-1)/2^(k+1)/k...
				*(-k)*log(z + sqrt(z-1).*sqrt(z+1)).^(-k-1)./(z + sqrt(z-1).*sqrt(z+1))...
				.*(1 +z./sqrt(z-1)./sqrt(z+1) )*eye(2);
		end
		dRR = dRR + (dR(:,:,k)-ds(:,:,k) )/n^k; % Avoids defining R_0^{right} = I
		for j = 1:(k-1)
			dRR = dRR - (dR(:,:,k-j)*s(:,:,j)+R(:,:,k-j)*ds(:,:,j))/n^k;
		end
	end
	db1 = -sin(psi(z) +alpha*pi/2 + acos(z)/2)*...
        (dpsi(z) -1/2/sqrt(1-z)/sqrt(1+z))*besselj(alpha,n*acos(z) ) +...
        cos(psi(z) +alpha*pi/2 + acos(z)/2)*(besselj(alpha-1,n*acos(z) ) ...
        -besselj(alpha+1,n*acos(z) ) )/2*n*(-1)/sqrt(1-z)/sqrt(1+z)...
        ... % Above derivative of cos-term,below sine term
        +cos(psi(z) +alpha*pi/2 + acos(z)/2)*(dpsi(z) -1/2/sqrt(1-z)/sqrt(1+z))*...
        (besselj(alpha-1,n*acos(z) ) - besselj(alpha+1,n*acos(z) ) )/2 ...
        +sin(psi(z) +alpha*pi/2 + acos(z)/2)*(besselj(alpha-2,n*acos(z) ) ...
        -2*besselj(alpha,n*acos(z) ) + besselj(alpha+2,n*acos(z) ) )/4*...
        n*(-1)/sqrt(1-z)/sqrt(1+z);
	db2 = -sin(psi(z) +alpha*pi/2 -acos(z)/2)*...
        (dpsi(z) +1/2/sqrt(1-z)/sqrt(1+z) )*besselj(alpha,n*acos(z) )...
        +cos(psi(z) +alpha*pi/2 -acos(z)/2)*...
        (besselj(alpha-1,n*acos(z) ) - besselj(alpha+1,n*acos(z) ) )/2*(-n)./sqrt(1-z)./sqrt(1+z) ...
        + cos(psi(z) +alpha*pi/2 -acos(z)/2)*(dpsi(z) +1/2/sqrt(1-z)/sqrt(1+z) )*...
        (besselj(alpha-1,n*acos(z) ) - besselj(alpha+1,n*acos(z) ) )/2 ...
        + sin(psi(z) +alpha*pi/2 -acos(z)/2)*(besselj(alpha-2,n*acos(z) ) ...
        -2*besselj(alpha,n*acos(z) ) + besselj(alpha+2,n*acos(z) ) )/4*...
        n*(-1)/sqrt(1-z)/sqrt(1+z);
end

if strcmp(method,'m')
    dbpiR = ([sqrt(pi*n)/2^n*...
        (1/2/sqrt(acos(z) )*(-1)./sqrt(1-z)./sqrt(1+z)...
        ./(sqrt(w(z) ).*(1+z).^(1/4).*(1-z).^(1/4) ) + sqrt(acos(z) )...
        .*(dw(z)*(-1/2)./(sqrt(w(z) ).^3.*(1+z).^(1/4).*(1-z).^(1/4) ) ...
        -1/4*(-2*z)./(sqrt(w(z) ).*(1+z).^(5/4).*(1-z).^(5/4) ) ) ...
        ),...
        0]*RR + [sqrt(pi*n*acos(z))./(2^n.*sqrt(w(z) ).*(1+z).^(1/4).*(1-z).^(1/4) ),...
        0]*dRR)*[Dinf*b1; -1i/Dinf*b2]...
        +...%Above derivative of row vector and matrix, below of column vector
        [sqrt(pi*n*acos(z))./(2^n.*sqrt(w(z) ).*(1+z).^(1/4).*(1-z).^(1/4) ),...
        0]*RR*[Dinf*db1;-1i/Dinf*db2];
elseif strcmp(method,'o')
    dbpiR = ( ([sqrt(n)*...
        (1/2/sqrt(acos(z) )*(-1)./sqrt(1-z)./sqrt(1+z)...
        ./(sqrt(w(z) ).*(1+z).^(1/4).*(1-z).^(1/4) ) + sqrt(acos(z) )...
        .*(dw(z)*(-1/2)./(sqrt(w(z) ).^3.*(1+z).^(1/4).*(1-z).^(1/4) ) ...
        -1/4*(-2*z)./(sqrt(w(z) ).*(1+z).^(5/4).*(1-z).^(5/4) ) ) ...
        ), 0]*RR + [sqrt(n*acos(z))./(sqrt(w(z) ).*(1+z).^(1/4).*(1-z).^(1/4) ),...
        0]*dRR)*[b1; (-1i/Dinf^2*b2)] +...%Above derivative of row vector and matrix, below of column vector
        [sqrt(n*acos(z))./(sqrt(w(z) ).*(1+z).^(1/4).*(1-z).^(1/4) ),...
        0]*RR*[db1; (-1i/Dinf^2*db2)])*nmz;
elseif strcmp(method,'mQ')
    dbpiR = ([sqrt(pi*n)/2^n*(-1/2*sthosth^(-3/2)*dsthosth./(sqrt((1+z).^beta.*h(z) ) ) - ...
        (dh(z)*(-1/2)./(sqrt(h(z).^3.*(1+z).^beta) ) ...
		-beta/2./(sqrt(h(z).*(1+z).^beta).*(1+z) ) ) ),0]*RR + ...
		[sqrt(pi*n/sthosth)./(2^n.*sqrt(h(z).*(1+z).^beta) ),...
        0]*dRR)*[Dinf*(cos(psi(z) +alpha*pi/2 + theta/2)*sbesowei +...
        splsindbes ); -1i/Dinf*(cos(psi(z) +alpha*pi/2 -theta/2)*...
        sbesowei + smisindbes)]...
        +...%Above derivative of row vector and matrix, below of column vector
        [sqrt(pi*n/sthosth)./(2^n.*sqrt(h(z).*(1+z).^beta) ),...
        0]*RR*[Dinf*(dscosbesoweipl +dssindbesoweipl);-1i/Dinf*(dscosbesoweimi+dssindbesoweimi)];
	dbpiR = -dbpiR/sthosth;
elseif strcmp(method,'oQ')
	dbpiR = ([sqrt(n)* (-1/2*sthosth^(-3/2)*dsthosth./(sqrt((1+z).^beta.*h(z) ) ) - ...
        (dh(z)*(-1/2)./(sqrt(h(z).^3.*(1+z).^beta) ) ...
		-beta/2./(sqrt(h(z).*(1+z).^beta).*(1+z) ) ) ),...
        0]*RR + [sqrt(n/sthosth)./(sqrt(h(z) .*(1+z).^beta ) ),...
        0]*dRR )*[(cos(psi(z) +alpha*pi/2 + theta/2)*sbesowei +...
        splsindbes ); -1i/Dinf^2*(cos(psi(z) +alpha*pi/2 -theta/2)*...
        sbesowei + smisindbes)] + [sqrt(n/sthosth)./(sqrt(h(z).*(1+z).^beta) ),...
        0]*RR*[(dscosbesoweipl +dssindbesoweipl);-1i/Dinf^2*(dscosbesoweimi+dssindbesoweimi)];
	dbpiR = -dbpiR/sthosth*nmz;
end
